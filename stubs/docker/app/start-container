#!/usr/bin/env bash
set -Eeuo pipefail

main() {
    echo_block "Starting container..."

    bootstrap_env
    extra_configs
    composer_warm_up || exit 1
    composer_validate || exit 1
    composer_diag || true
    composer_install || exit 1
    composer_check_platform_reqs || exit 1
    laravel_warm_up || exit 1

    echo_block "üéâ Application container is ready"
    exec /usr/bin/supervisord -c /etc/supervisord.conf
}

bootstrap_env() {
    # App dir (default: /code)
    export APP_INSTALL_DIR="${APP_INSTALL_DIR:-/code}"
    cd "$APP_INSTALL_DIR"

    # Composer dirs INSIDE project
    export COMPOSER_HOME="${COMPOSER_HOME:-$APP_INSTALL_DIR/.composer}"
    export COMPOSER_CACHE_DIR="${COMPOSER_CACHE_DIR:-$COMPOSER_HOME/cache}"
    mkdir -p "$COMPOSER_HOME" "$COMPOSER_CACHE_DIR"
    mkdir -p "$COMPOSER_HOME/cache/files"

    # Verbosity flags
    if [[ "${TOOLBOX_VERBOSE_MODE:-false}" == true ]]; then
        global_flags="--ansi --verbose"
    else
        global_flags="--ansi --quiet"
    fi
}

extra_configs() {

    if [ -f "$APP_INSTALL_DIR/.docker/app/conf.d/php.ini" ]; then
      cp -f "$APP_INSTALL_DIR/.docker/app/conf.d/php.ini" /usr/local/etc/php/conf.d/98-php.ini
    fi

    if [ -f "$APP_INSTALL_DIR/.docker/app/conf.d/custom.ini" ]; then
      cp -f "$APP_INSTALL_DIR/.docker/app/conf.d/custom.ini" /usr/local/etc/php/conf.d/99-custom.ini
    fi


}

composer_warm_up() {
    # Keep Packagist unless a CUSTOM_REPO_URL is explicitly provided
    if [ -n "${CUSTOM_REPO_URL:-}" ]; then
        local base="${CUSTOM_REPO_URL%/}"
        composer config -g repositories.custom composer "${base}/composer/" || true
        composer config -g repo.packagist false || true

        # Optional public keys (best-effort)
        [ -f "$COMPOSER_HOME/keys.dev.pub" ]  || curl -fsS "${base}/composer/keys/snapshots.pub" -o "$COMPOSER_HOME/keys.dev.pub"  || true
        [ -f "$COMPOSER_HOME/keys.tags.pub" ] || curl -fsS "${base}/composer/keys/releases.pub"  -o "$COMPOSER_HOME/keys.tags.pub" || true
    fi

    # Minimal files if missing (do NOT overwrite if exist)
    [ -f "$COMPOSER_HOME/config.json" ]   || echo '{}' > "$COMPOSER_HOME/config.json"
    [ -f "$COMPOSER_HOME/composer.json" ] || echo '{}' > "$COMPOSER_HOME/composer.json"

    composer --version
}

composer_diag() {
    echo_info "diagnosing composer..."
    # If no internet, skip
    if ! ping -c 1 8.8.8.8 >/dev/null 2>&1; then
        echo_warning "No internet connectivity, skipping composer diag"
        return 0
    fi

    # Composer diag returns non-zero on warnings; don't fail the container
    if composer diag $global_flags; then
        return 0
    else
        echo_warning "Composer diag reported issues"
        return 0
    fi
}

composer_validate() {
    echo_info "Validating composer..."
    if ! composer validate $global_flags; then
        echo_info "Running composer update (to fix lock/metadata)"
        if [[ "${TOOLBOX_STARTER_MODE:-dev}" == "prod" ]]; then
            composer update --no-dev $global_flags
        else
            composer update $global_flags
        fi
    fi
}

composer_check_platform_reqs() {
    echo_info "checking platform requirements..."
    if ! composer check-platform-reqs $global_flags; then
        echo_fail "composer platform requirements are not satisfied"
        return 1
    fi
}

composer_install() {
    echo_info "installing composer dependencies..."
    local flags="--no-interaction --no-progress --optimize-autoloader"
    if [[ "${TOOLBOX_STARTER_MODE:-dev}" == "prod" ]]; then
        composer install --no-dev $flags $global_flags
    else
        if [ -f "vendor/autoload.php" ]; then
            composer install --dry-run --ansi
            echo_warning "Only dry-run. Don't forget to run 'composer install'"
        else
            composer install --no-interaction --optimize-autoloader $global_flags
        fi
    fi
}

laravel_warm_up() {
    if ! php artisan --version --ansi; then
        echo_fail "php artisan command failed"
        return 1
    fi

    evaluate_custom_commands

    php artisan optimize:clear $global_flags || true
    echo_success "laravel optimize was cleared"

    if [ "${TOOLBOX_STARTER_MODE:-dev}" = "prod" ]; then
        php artisan optimize $global_flags || true
        echo_success "laravel optimized"
        # Copy rr binary into project root (optional)
        cp /usr/local/bin/rr . 2>/dev/null || true
        echo_block_prod "üöÄ PRODUCTION MODE"
    else
        echo_block "üõ†Ô∏è DEVELOPMENT MODE"
    fi
}

evaluate_custom_commands () {
    if [[ -n "${CUSTOM_COMMANDS:-}" ]]; then
        echo_block "Running custom commands..."
        eval "${CUSTOM_COMMANDS}"
        echo_success "All custom commands evaluated"
    fi
}

echo_block()      { printf "\n\e[44;37m %s \e[0m\n\n" "$@"; }
echo_block_prod() { printf "\n\e[41;37m %s \e[0m\n\n" "$@"; }
echo_info()       { printf "\n\e[34m‚Ñπ  %s\e[0m\n" "$@"; }
echo_success()    { printf "\n\e[32m‚úî  %s\e[0m\n" "$@"; }
echo_warning()    { printf "\n\e[33m‚ö†  %s\e[0m\n" "$@"; }
echo_fail()       { printf "\n\e[31m‚úò  %s\e[0m\n" "$@"; }

if [ $# -gt 0 ]; then
    exec "$@"
else
    main "$@"
fi
